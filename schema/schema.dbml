// === ENUM: /enum/enum.dbml ===
Enum prioritas {
  LOW
  MEDIUM
  HIGH
}

Enum status {
  TODO
  IN_PROGRESS
  DONE
}

Enum action {
  CREATE
  UPDATE
  DELETE
}

// === TABLE: /entities/activity_logs.dbml ===
Table activity_logs {
  id int [pk, increment]
  user_id int [ref: > users.id]
  table_ref varchar
  action action
  message varchar
  device varchar
  origins varchar
  created_at timestamp
  updated_at timestamp
}

// === TABLE: /entities/backlog_items.dbml ===
Table backlog_items {
  id int [pk, increment]
  backlog_id int [ref: > backlogs.id]
  assigned_to int [ref: > users.id]
  status_id int [ref: > statuses.id]
  sprint_id int [ref: > sprints.id]
  estimate int
  code varchar
  start_date date
  end_date date
  priority prioritas
  description text
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`]
}

// === TABLE: /entities/departments.dbml ===
Table departments {
  id int [pk, increment]
  name varchar [not null]
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`]
}

// === TABLE: /entities/documents.dbml ===
Table documents {
  id int [pk, increment]
  title varchar [not null]
  content jsonb
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`]
}

// === TABLE: /entities/epics.dbml ===
Table epics {
    id int [pk, increment]
    name varchar [not null]
    product_id int [ref: > products.id]
    created_at timestamp [default: `CURRENT_TIMESTAMP`]
    updated_at timestamp [default: `CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`]
}

// === TABLE: /entities/jobs.dbml ===
Table jobs {
  id int [pk, increment]
  title varchar
  instruction jsonb
  guide jsonb
  sop_id int [ref: > sops.id]
  spk_id int [ref: > spks.id]
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP`]
}

// === TABLE: /entities/levels.dbml ===
Table levels {
  id int [pk, increment]
  name varchar [not null]
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`]
}

// === TABLE: /entities/permissions.dbml ===
Table permissions {
  id int [pk, increment]
  name varchar
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP`]
}

// === TABLE: /entities/positions.dbml ===
Table positions {
    id int [pk, increment]
    name varchar [not null]
    department_id int [ref: > departments.id]
    created_at timestamp [default: `CURRENT_TIMESTAMP`]
    updated_at timestamp [default: `CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`]
}

// === TABLE: /entities/products.dbml ===
Table products {
  id int [pk, increment]
  name varchar
  project_id int [ref: > projects.id]
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`]
}

// === TABLE: /entities/roles.dbml ===
Table roles {
  id int [pk, increment]
  name varchar
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`]
}

// === TABLE: /entities/scrum/backlogs.dbml ===
Table backlogs {
  id int [pk, increment]
  pic int [ref: > users.id]
  project_id int [ref: > projects.id]
  epic_id int [ref: > epics.id]
  code varchar 
  priority prioritas
  description text
  start_date date
  end_date date
  created_by int [ref: > users.id]
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`]
}

// === TABLE: /entities/scrum/projects.dbml ===
Table projects {
  id int [pk, increment]
  name varchar [not null]
  code varchar
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`]
}

// === TABLE: /entities/scrum/sprints.dbml ===
Table sprints {
  id int [pk, increment]
  name varchar
  code varchar
  total_estimate int
  start_date datetime
  end_date datetime
  squad_id int [ref: > squads.id]
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`]
}

// === TABLE: /entities/scrum/squads.dbml ===
Table squads {
  id int [pk, increment]
  project_id int [ref: > projects.id]
  name varchar
  code varchar
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`]
}

// === TABLE: /entities/scrum/statuses.dbml ===
Table statuses {
  id int [pk, increment]
  name varchar
  position_id int [ref: > positions.id]
  index int
  color varchar
  category status
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`]
} 

// === TABLE: /entities/sops.dbml ===
Table sops {
  id int [pk, increment]
  title varchar [not null]
  code varchar
  content jsonb
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`]
}

// === TABLE: /entities/spks.dbml ===
Table spks {
  id int [pk, increment]
  title varchar [not null]
  code varchar
  content jsonb
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`]
}

// === TABLE: /entities/titles.dbml ===
Table titles {
  id int [pk, increment]
  name varchar [not null]
  department_id int [ref: > departments.id]
  position_id int [ref: > positions.id]
  level_id int [ref: > levels.id]
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`]
}

// === TABLE: /entities/users.dbml ===
Table users {
  id int [pk, increment]
  title_id int [ref: - titles.id]
  role_id int [ref: > roles.id]
  name varchar [not null]
  email varchar [not null, unique]
  email_verified_at timestamp
  password varchar [not null]
  remember_token varchar
  custom_fields json
  avatar_url varchar
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`]
}

// === RELATION: /relation/product_documents/product_documents.dbml ===
Table product_documents{
    id int [pk, increment]
    product_id int [ref: > products.id]
    document_id int [ref: > documents.id]
}

// === RELATION: /relation/project_milestones/project_milestones.dbml ===
Table project_milestones {
  id int [pk, increment]
  name varchar
  project_id int [ref: > projects.id]
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP`]
}

// === RELATION: /relation/role_permissions/role_permissions.dbml ===
Table role_permissions {
    id int [pk, increment]
    role_id int [ref: > roles.id]
    permission_id int [ref: > permissions.id]
    created_at timestamp [default: `CURRENT_TIMESTAMP`]
    updated_at timestamp [default: `CURRENT_TIMESTAMP`]
}

// === RELATION: /relation/sop_positions/sop_positions.dbml ===
Table sop_positions {
    id int [pk, increment]
    sop_id int [ref: > sops.id]
    position_id int [ref: > positions.id]
}

// === RELATION: /relation/spk_positions/spk_positions.dbml ===
Table spk_positions {
    id int [pk, increment]
    spk_id int [ref: > spks.id]
    position_id int [ref: > positions.id]
}

// === RELATION: /relation/squad_members/squad_members.dbml ===
Table squad_members {
  id int [pk, increment]
  squad_id int [ref: > squads.id]
  user_id int [ref: > users.id]
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP`]
}